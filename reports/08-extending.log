Traceback (most recent call last):
  File "/usr/share/miniconda/envs/ml-latest/lib/python3.7/site-packages/jupyter_cache/executors/utils.py", line 56, in single_nb_execution
    record_timing=False,
  File "/usr/share/miniconda/envs/ml-latest/lib/python3.7/site-packages/nbclient/client.py", line 1087, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/share/miniconda/envs/ml-latest/lib/python3.7/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/usr/share/miniconda/envs/ml-latest/lib/python3.7/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/usr/share/miniconda/envs/ml-latest/lib/python3.7/asyncio/base_events.py", line 587, in run_until_complete
    return future.result()
  File "/usr/share/miniconda/envs/ml-latest/lib/python3.7/site-packages/nbclient/client.py", line 541, in async_execute
    cell, index, execution_count=self.code_cells_executed + 1
  File "/usr/share/miniconda/envs/ml-latest/lib/python3.7/site-packages/nbclient/client.py", line 832, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/usr/share/miniconda/envs/ml-latest/lib/python3.7/site-packages/nbclient/client.py", line 740, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply['content'])
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import torch_geometric
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mOSError[0m                                   Traceback (most recent call last)
[0;32m<ipython-input-1-c36e13293883>[0m in [0;36m<module>[0;34m[0m
[0;32m----> 1[0;31m [0;32mimport[0m [0mtorch_geometric[0m[0;34m[0m[0;34m[0m[0m
[0m
[0;32m/usr/share/miniconda/envs/ml-latest/lib/python3.7/site-packages/torch_geometric/__init__.py[0m in [0;36m<module>[0;34m[0m
[1;32m      1[0m [0;32mfrom[0m [0;34m.[0m[0mdebug[0m [0;32mimport[0m [0mis_debug_enabled[0m[0;34m,[0m [0mdebug[0m[0;34m,[0m [0mset_debug[0m[0;34m[0m[0;34m[0m[0m
[0;32m----> 2[0;31m [0;32mimport[0m [0mtorch_geometric[0m[0;34m.[0m[0mnn[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      3[0m [0;32mimport[0m [0mtorch_geometric[0m[0;34m.[0m[0mdata[0m[0;34m[0m[0;34m[0m[0m
[1;32m      4[0m [0;32mimport[0m [0mtorch_geometric[0m[0;34m.[0m[0mdatasets[0m[0;34m[0m[0;34m[0m[0m
[1;32m      5[0m [0;32mimport[0m [0mtorch_geometric[0m[0;34m.[0m[0mtransforms[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/share/miniconda/envs/ml-latest/lib/python3.7/site-packages/torch_geometric/nn/__init__.py[0m in [0;36m<module>[0;34m[0m
[1;32m      1[0m [0;32mfrom[0m [0;34m.[0m[0mmeta[0m [0;32mimport[0m [0mMetaLayer[0m[0;34m[0m[0;34m[0m[0m
[0;32m----> 2[0;31m [0;32mfrom[0m [0;34m.[0m[0mdata_parallel[0m [0;32mimport[0m [0mDataParallel[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      3[0m [0;32mfrom[0m [0;34m.[0m[0mreshape[0m [0;32mimport[0m [0mReshape[0m[0;34m[0m[0;34m[0m[0m
[1;32m      4[0m [0;32mfrom[0m [0;34m.[0m[0mconv[0m [0;32mimport[0m [0;34m*[0m  [0;31m# noqa[0m[0;34m[0m[0;34m[0m[0m
[1;32m      5[0m [0;32mfrom[0m [0;34m.[0m[0mnorm[0m [0;32mimport[0m [0;34m*[0m  [0;31m# noqa[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/share/miniconda/envs/ml-latest/lib/python3.7/site-packages/torch_geometric/nn/data_parallel.py[0m in [0;36m<module>[0;34m[0m
[1;32m      3[0m [0;34m[0m[0m
[1;32m      4[0m [0;32mimport[0m [0mtorch[0m[0;34m[0m[0;34m[0m[0m
[0;32m----> 5[0;31m [0;32mfrom[0m [0mtorch_geometric[0m[0;34m.[0m[0mdata[0m [0;32mimport[0m [0mBatch[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      6[0m [0;34m[0m[0m
[1;32m      7[0m [0;34m[0m[0m

[0;32m/usr/share/miniconda/envs/ml-latest/lib/python3.7/site-packages/torch_geometric/data/__init__.py[0m in [0;36m<module>[0;34m[0m
[0;32m----> 1[0;31m [0;32mfrom[0m [0;34m.[0m[0mdata[0m [0;32mimport[0m [0mData[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      2[0m [0;32mfrom[0m [0;34m.[0m[0mbatch[0m [0;32mimport[0m [0mBatch[0m[0;34m[0m[0;34m[0m[0m
[1;32m      3[0m [0;32mfrom[0m [0;34m.[0m[0mdataset[0m [0;32mimport[0m [0mDataset[0m[0;34m[0m[0;34m[0m[0m
[1;32m      4[0m [0;32mfrom[0m [0;34m.[0m[0min_memory_dataset[0m [0;32mimport[0m [0mInMemoryDataset[0m[0;34m[0m[0;34m[0m[0m
[1;32m      5[0m [0;32mfrom[0m [0;34m.[0m[0mdataloader[0m [0;32mimport[0m [0mDataLoader[0m[0;34m,[0m [0mDataListLoader[0m[0;34m,[0m [0mDenseDataLoader[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/share/miniconda/envs/ml-latest/lib/python3.7/site-packages/torch_geometric/data/data.py[0m in [0;36m<module>[0;34m[0m
[1;32m      5[0m [0;32mimport[0m [0mtorch[0m[0;34m[0m[0;34m[0m[0m
[1;32m      6[0m [0;32mimport[0m [0mtorch_geometric[0m[0;34m[0m[0;34m[0m[0m
[0;32m----> 7[0;31m [0;32mfrom[0m [0mtorch_sparse[0m [0;32mimport[0m [0mcoalesce[0m[0;34m,[0m [0mSparseTensor[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      8[0m from torch_geometric.utils import (contains_isolated_nodes,
[1;32m      9[0m                                    contains_self_loops, is_undirected)

[0;32m/usr/share/miniconda/envs/ml-latest/lib/python3.7/site-packages/torch_sparse/__init__.py[0m in [0;36m<module>[0;34m[0m
[1;32m     11[0m ]:
[1;32m     12[0m     torch.ops.load_library(importlib.machinery.PathFinder().find_spec(
[0;32m---> 13[0;31m         library, [osp.dirname(__file__)]).origin)
[0m[1;32m     14[0m [0;34m[0m[0m
[1;32m     15[0m [0;32mif[0m [0mtorch[0m[0;34m.[0m[0mcuda[0m[0;34m.[0m[0mis_available[0m[0;34m([0m[0;34m)[0m [0;32mand[0m [0mtorch[0m[0;34m.[0m[0mversion[0m[0;34m.[0m[0mcuda[0m[0;34m:[0m  [0;31m# pragma: no cover[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/share/miniconda/envs/ml-latest/lib/python3.7/site-packages/torch/_ops.py[0m in [0;36mload_library[0;34m(self, path)[0m
[1;32m    103[0m             [0;31m# static (global) initialization code in order to register custom[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m    104[0m             [0;31m# operators with the JIT.[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 105[0;31m             [0mctypes[0m[0;34m.[0m[0mCDLL[0m[0;34m([0m[0mpath[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    106[0m         [0mself[0m[0;34m.[0m[0mloaded_libraries[0m[0;34m.[0m[0madd[0m[0;34m([0m[0mpath[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    107[0m [0;34m[0m[0m

[0;32m/usr/share/miniconda/envs/ml-latest/lib/python3.7/ctypes/__init__.py[0m in [0;36m__init__[0;34m(self, name, mode, handle, use_errno, use_last_error)[0m
[1;32m    362[0m [0;34m[0m[0m
[1;32m    363[0m         [0;32mif[0m [0mhandle[0m [0;32mis[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 364[0;31m             [0mself[0m[0;34m.[0m[0m_handle[0m [0;34m=[0m [0m_dlopen[0m[0;34m([0m[0mself[0m[0;34m.[0m[0m_name[0m[0;34m,[0m [0mmode[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    365[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    366[0m             [0mself[0m[0;34m.[0m[0m_handle[0m [0;34m=[0m [0mhandle[0m[0;34m[0m[0;34m[0m[0m

[0;31mOSError[0m: libcudart.so.10.1: cannot open shared object file: No such file or directory
OSError: libcudart.so.10.1: cannot open shared object file: No such file or directory

